{"version":3,"file":"static/js/456.4e9ea551.chunk.js","mappings":"oQACA,EAA+B,gCAA/B,EAAuE,yBAAvE,EAAwG,yBAAxG,EAA0I,0B,SCuE1I,EAjEkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAcC,EAAd,KAKMC,GAAWC,EAAAA,EAAAA,MAMXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,GAAS,SAAAQ,GACP,OAAO,kBAAKA,GAAZ,cAAwBF,EAAOC,GAChC,GACF,EAYOV,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEf,OACE,kBAAMW,SATY,SAAAL,GAClBA,EAAMM,iBAhBY,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5BG,GAASU,EAAAA,EAAAA,GAAM,CAAEd,MAAAA,EAAOC,SAAAA,IACzB,CAeCc,CAAY,CAAEf,MAAAA,EAAOC,SAAAA,IALrBE,EAAS,CAAEH,MAAO,GAAIC,SAAU,IAOjC,EAKC,WACE,iBAAKe,UAAWC,EAAhB,WACE,mBAAOD,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXC,KAAK,QACLT,KAAK,QACLU,QAAQ,2CACRC,UAAQ,EACRV,MAAOV,EACPqB,SAAUf,QAGd,mBAAOU,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXC,KAAK,WACLT,KAAK,WACLW,UAAQ,EACRV,MAAOT,EACPoB,SAAUf,WAIhB,mBAAQY,KAAK,SAASF,UAAWC,EAAjC,qBAKL,E,UCzDD,EAPkB,WAEhB,OADgBK,EAAAA,EAAAA,IAAYC,EAAAA,IAEnB,SAAC,KAAD,CAAUC,GAAG,eAEf,SAAC,EAAD,GACR,C,8ECZM,IAAMD,EAAc,SAAC,GAAD,SAAGE,KAAgBC,OAAnB,EACdC,EAAU,SAAC,GAAD,SAAGF,KAAgBG,IAAnB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/modules/LoginForm/loginForm.module.css?1f30","modules/LoginForm/LoginForm.jsx","Pages/LoginPage/LoginPage.jsx","redux/auth/auth-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"loginForm_inputWrapper__59R2A\",\"label\":\"loginForm_label__XDQkq\",\"input\":\"loginForm_input__BOjcn\",\"addBtn\":\"loginForm_addBtn__fHjSa\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/auth-operations';\n\nimport css from './loginForm.module.css';\n\nconst LoginForm = () => {\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleLogin = ({ email, password }) => {\n    dispatch(login({ email, password }));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const reset = () => {\n    setState({ email: '', password: '' });\n  };\n\n  const hadleSubmit = event => {\n    event.preventDefault();\n    handleLogin({ email, password });\n    reset();\n  };\n\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={hadleSubmit}>\n      <div className={css.inputWrapper}>\n        <label className={css.label}>\n          Email\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className={css.addBtn}>\n        Login\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport LoginForm from 'modules/LoginForm/LoginForm';\nimport { isUserLogin } from 'redux/auth/auth-selectors';\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return <LoginForm />;\n};\nexport default LoginPage;\n","export const isUserLogin = ({ auth }) => auth.isLogin;\nexport const getUser = ({ auth }) => auth.user;\n"],"names":["useState","email","password","state","setState","dispatch","useDispatch","handleChange","event","currentTarget","name","value","prevState","onSubmit","preventDefault","login","handleLogin","className","css","type","pattern","required","onChange","useSelector","isUserLogin","to","auth","isLogin","getUser","user"],"sourceRoot":""}